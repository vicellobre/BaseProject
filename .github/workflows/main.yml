name: Test project

on: [push, pull_request]

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ./
        testMode:
         # - playmode
          - editmode
    steps:
      # Checkout
      - name: Clonando el repositorio
        uses: actions/checkout@v4
        with:
          lfs: true
          
      # Cache
      - name: Almacenando Library en cache
        uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
            
      # Mostrar archivos de la raiz para ver si se encuentra la carpeta CodeCoverage
      - name: Listar archivos y directorios
        run: ls -l
        
      # Comprobar si existe la carpeta CodeCoverage
      - name: Verificar si el directorio existe
        run: |
          if [ ! -d CodeCoverage ]; then
            echo "El directorio no existe. Creándolo..."
            mkdir CodeCoverage
          else
            echo "El directorio ya existe."
          fi

      # Intentar ver si es problema de permisos
      - name: Cambiar permisos de archivos de cobertura
        run: sudo chmod -R a+rw "CodeCoverage"
      - name: Cambiar permisos de archivos de cobertura a usuario
        run: sudo chown -R $USER:$USER "CodeCoverage"
        
      # Test
      - name: Probando
        uses: game-ci/unity-test-runner@v4.3.1
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*;dontClear'
          
      # Mostrar archivos de la raiz para ver si se encuentra la carpeta CodeCoverage
      - name: Listar archivos y directorios
        run: ls -l
      
      # Comprobar si existe la carpeta CodeCoverage
      - name: Verificar si el directorio existe
        run: |
          if [ ! -d ${{ steps.tests.outputs.coveragePath }} ]; then
            echo "El directorio no existe. Creándolo..."
            mkdir ${{ steps.tests.outputs.coveragePath }}
          else
            echo "El directorio ya existe."
          fi

      # Intentar ver si es problema de permisos
      - name: Cambiar permisos de archivos de cobertura
        run: sudo chmod -R a+rw "${{ steps.tests.outputs.coveragePath }}"
      - name: Cambiar permisos de archivos de cobertura a usuario
        run: sudo chown -R $USER:$USER "${{ steps.tests.outputs.coveragePath }}"

        
      # Mostrar contenido de CodeCoverage
      - name: Listar archivos y directorios de CodeCoverage
        run: ls -l ${{ steps.tests.outputs.coveragePath }}

      # Mostrar contenido de editmode-artifacts
      - name: Listar archivos y directorios de editmode-artifacts
        run: ls -l ${{ steps.tests.outputs.artifactsPath }}

      # Mostrar lista de workspace-opencov
      - name: Mostrar contenido de la carpeta opencov
        run: ls -l ${{ steps.tests.outputs.coveragePath }}/workspace-opencov/

      # Mostrar ista de Report
      # - name: Mostrar contenido de la carpeta Report
      #   run: ls -l ${{ steps.tests.outputs.coveragePath }}/Report/
        
      # Test Artifacts
      - name: Almacenar resultados de las pruebas
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
          
      # Coverage Artifacts
      - name: Almacenar resultados del CodeCoverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ./${{ steps.tests.outputs.coveragePath }}/Report/
