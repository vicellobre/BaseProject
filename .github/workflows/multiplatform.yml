name: 🎮🖥️ Unity Project 🖥️🎮

on:
  workflow_dispatch: {} # Manual execution trigger
    # inputs:
      # run-test:
      #   description: 'Run Tests'
      #   required: true
      #   default: true
      # run-build:
      #   description: 'Run Builds'
      #   required: true
      #   default: false
      # run-deploy:
      #   description: 'Run Deploy'
      #   required: true
      #   default: false
  push:
    branches: [QA, Prod, main] # Trigger workflow on pushes to specified branches
  pull_request:
    branches: [Dev] # Trigger workflow on pull requests to specified branches

concurrency: # Define concurrency group settings
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }} # Group executions by ref, target platform, and Unity version
  cancel-in-progress: true # Cancel any in-progress jobs if a new one starts within the same group

jobs:
  Test:
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'dev' }} # || github.event.inputs.run-test == 'true' }}
    name: 🧪 Test of ${{ matrix.testMode }} for ${{ matrix.targetPlatform }} on ${{ matrix.os }} with ${{ matrix.unityVersion }} 🧪
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Continue running other jobs even if one fails
      matrix:
        os: 
        - windows-2022
        - ubuntu-latest
        - macos-latest
        projectPath:
          - ./ # When the project is in the root directory
          # - test-project # When the project is in a subdirectory
          # - test-package # When testing packages
        unityVersion: # Useful for testing migrations to different Unity versions
          - 2022.3.15f1 
          # - 2022.3.42f1
        targetPlatform:
          - iOS # Build an iOS player
          - Android # Build an Android player
          - WebGL # Build a WebGL player
          - StandaloneLinux64 # Build a Linux 64-bit standalone player
          - StandaloneWindows64 # Build a Windows 64-bit standalone player
          - StandaloneOSX # Build a Mac standalone player
        testMode: 
          # - editmode
          # - playmode
          - all
          # - standalone
        exclude: # Exclude unsupported platform and OS combinations
          - targetPlatform: iOS
            os: windows-2022
          - targetPlatform: iOS
            os: macos-latest
          - targetPlatform: Android
            os: windows-2022
          - targetPlatform: Android
            os: macos-latest
          - targetPlatform: WebGL
            os: windows-2022
          - targetPlatform: WebGL
            os: macos-latest
          - targetPlatform: StandaloneLinux64
            os: windows-2022
          - targetPlatform: StandaloneLinux64
            os: macos-latest
          - targetPlatform: StandaloneOSX
            os: ubuntu-latest
          - targetPlatform: StandaloneOSX
            os: windows-2022
          - targetPlatform: StandaloneWindows64
            os: ubuntu-latest
          - targetPlatform: StandaloneWindows64
            os: macos-latest
          # debug
          - targetPlatform: iOs
          - targetPlatform: StandaloneOSX
          - os: macos-latest

    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      
    steps:
      #####################################
      # Free Disk Space (Android & WebGL) #
      #####################################
      - name: 🧹🗑️ Free Disk Space 🗑️🧹
        if: matrix.targetPlatform == 'Android' || matrix.targetPlatform == 'WebGL'
        uses: jlumbroso/free-disk-space@v1.3.1
        
      #####################
      # Checkout the Code #
      #####################
      - name: 📥 Checkout Code 📥
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ matrix.targetPlatform == 'WebGL' && 1 || 0 }} # Fetch the entire history to allow for better build caching
          lfs: true # Enable Git LFS for large files

      #############################
      # Create Git LFS File List  #
      #############################
      - name: 📝🗂️ Create LFS File List 🗂️📝
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      #####################
      # Restore LFS Cache #
      #####################
      - name: ♻️📦 Restore LFS Cache ♻️📦
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      #################
      # Git LFS Pull  #
      #################
      - name: 🔄 Git LFS Pull 🔄
        run: |
          git lfs pull
          git add .
          git reset --hard

      ###############################
      # Restore Unity Library Cache #
      ###############################
      - name: ♻️📦 Restore Library Cache 📦♻️
        uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-v${{ matrix.unityVersion }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-v${{ matrix.unityVersion }}-
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      ###################
      # Run Unity Tests #
      ###################
      - name: ✅ Run Unity Tests ✅
        id: testRunner
        uses: game-ci/unity-test-runner@v4.3.1
        with:
          # General Configuration
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          # Conditional Configuration
          packageMode: ${{ github.event.inputs.projectPath == 'test-package' }}      
          # Reporting and Artifacts
          checkName: ${{ matrix.testMode }} Test Results
          artifactsPath: ${{ matrix.testMode }}-artifacts
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*;dontClear'
          # Secrets and Tokens
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      #####################################
      # Free Disk Space (Android & WebGL) #
      #####################################
      # - name: 🧹🗑️ Free Disk Space 🗑️🧹
      #   if: matrix.targetPlatform == 'Android' || matrix.targetPlatform == 'WebGL'
      #   uses: jlumbroso/free-disk-space@v1.3.1
        
      ########################
      # Upload Test Results  #
      ########################
      - name: 📤📊 Upload Test Results 📊📤
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test-results-${{ matrix.testMode }}-${{ matrix.targetPlatform }}-v${{ matrix.unityVersion }}-${{ runner.os }}
          path: ${{ steps.testRunner.outputs.artifactsPath }}

        
      #############################
      # Upload Coverage Results   #
      #############################
      - name: 📤📊 Upload Coverage Results 📊📤
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Coverage-results-${{ matrix.testMode }}-${{ matrix.targetPlatform }}-v${{ matrix.unityVersion }}-${{ runner.os }}
          path: ${{ steps.testRunner.outputs.coveragePath }}
          
      # - name: Notifications
        # Configure notifications (e.g., Slack, email) to receive alerts
  Build:
    # if: ${{ github.ref == 'refs/heads/QA' || github.event.inputs.run-build == 'true' }}
    needs: Test
    name: 🛠️ Build for ${{ matrix.targetPlatform }} on ${{ matrix.os }} with ${{ matrix.unityVersion }} 🛠️
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Continue running other jobs even if one fails
      matrix:
        os: 
        - windows-2022
        - ubuntu-latest
        - macos-latest
        projectPath:
          - ./ # When the project is in the root directory
          # - test-project # When the project is in a subdirectory
          # - test-package # When testing packages
        unityVersion: # Useful for testing migrations to different Unity versions
          - 2022.3.15f1 
          # - 2022.3.42f1
        targetPlatform:
          - iOS # Build an iOS player
          - Android # Build an Android player
          - WebGL # Build a WebGL player
          - StandaloneLinux64 # Build a Linux 64-bit standalone player
          - StandaloneWindows64 # Build a Windows 64-bit standalone player
          - StandaloneOSX # Build a Mac standalone player
        testMode: 
          - editmode
          # - playmode
          # - all
          # - standalone
        exclude: # Exclude unsupported platform and OS combinations
          - targetPlatform: iOS
            os: windows-2022
          - targetPlatform: iOS
            os: macos-latest
          - targetPlatform: Android
            os: windows-2022
          - targetPlatform: Android
            os: macos-latest
          - targetPlatform: WebGL
            os: windows-2022
          - targetPlatform: WebGL
            os: macos-latest
          - targetPlatform: StandaloneLinux64
            os: windows-2022
          - targetPlatform: StandaloneLinux64
            os: macos-latest
          - targetPlatform: StandaloneOSX
            os: ubuntu-latest
          - targetPlatform: StandaloneOSX
            os: windows-2022
          - targetPlatform: StandaloneWindows64
            os: ubuntu-latest
          - targetPlatform: StandaloneWindows64
            os: macos-latest
          # debug
          - targetPlatform: iOs
          - targetPlatform: StandaloneOSX
          - os: macos-latest

    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      
    steps:
      #####################################
      # Free Disk Space (Android & WebGL) #
      #####################################
      - name: 🧹🗑️  Free Disk Space 🗑️🧹
        if: matrix.targetPlatform == 'Android' || matrix.targetPlatform == 'WebGL'
        uses: jlumbroso/free-disk-space@v1.3.1
        
      #####################
      # Checkout the Code #
      #####################
      - name: 📥 Checkout Code 📥
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ matrix.targetPlatform == 'WebGL' && 1 || 0 }} # Fetch the entire history to allow for better build caching
          lfs: true # Enable Git LFS for large files

      ############################
      # Create Git LFS File List #
      ############################
      - name: 📝🗂️ Create LFS File List 🗂️📝
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      #####################
      # Restore LFS Cache #
      #####################
      - name: ♻️📦 Restore LFS Cache ♻️📦
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      #################
      # Git LFS Pull  #
      #################
      - name: 🔄 Git LFS Pull 🔄
        run: |
          git lfs pull
          git add .
          git reset --hard

      ###############################
      # Restore Unity Library Cache #
      ###############################
      - name: ♻️📦 Restore Library Cache 📦♻️
        uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-v${{ matrix.unityVersion }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-v${{ matrix.unityVersion }}-
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      ######################################
      # Set Scripting Backend to IL2CPP    #
      ######################################
      # - name: ⚙️ Set Scripting Backend To IL2CPP ⚙️
      #   run: |
      #     if [[ "${{ runner.os }}" == "Windows" ]]; then
      #       Move-Item -Path "${{ matrix.projectPath }}ProjectSettings/ProjectSettingsIl2cpp.asset" -Destination "${{ matrix.projectPath }}/ProjectSettings/ProjectSettings.asset" -Force
      #     else
      #       mv -f "${{ matrix.projectPath }}ProjectSettings/ProjectSettingsIl2cpp.asset" "${{ matrix.projectPath }}/ProjectSettings.asset"
      #     fi
      #   shell: bash
    
      #####################################
      # Free Disk Space (Android & WebGL) #
      #####################################
      - name: 🧹🗑️ Free Disk Space 🗑️🧹
        if: matrix.targetPlatform == 'Android' || matrix.targetPlatform == 'WebGL'
        uses: jlumbroso/free-disk-space@v1.3.1

      #######################
      # Build Unity Project #
      #######################
      - name:  🏗️1️⃣ Build Unity Project 1️⃣🏗️
        uses: game-ci/unity-builder@v4
        id: build-1
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: 'Build-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}' # Custom build name including Unity version and target platform
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          # customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      ###################
      # Sleep for Retry #
      ###################
      - name: 🕰️ Sleep for Retry 🕰️
        if: ${{ steps.build-1.outcome == 'failure' }}
        run: |
          sleep 60

      #################################
      # Build Unity Project (Retry 1) #
      #################################
      - name:  🏗️2️⃣ Build Unity Project 2️⃣🏗️
        uses: game-ci/unity-builder@v4
        id: build-2
        if: ${{ steps.build-1.outcome == 'failure' }}
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: 'Build-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}' # Custom build name including Unity version and target platform
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          # customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      ###################
      # Sleep for Retry #
      ###################
      - name: 🕰️ Sleep for Retry 🕰️
        if: ${{ steps.build-1.outcome == 'failure' && steps.build-2.outcome == 'failure' }}
        run: |
          sleep 240

      #################################
      # Build Unity Project (Retry 2) #
      #################################
      - name:  🏗️3️⃣ Build Unity Project 3️⃣🏗️
        uses: game-ci/unity-builder@v4
        id: build-3
        if: ${{ steps.build-1.outcome == 'failure' && steps.build-2.outcome == 'failure' }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: 'Build-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}' # Custom build name including Unity version and target platform
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          # customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
          
      ##########################
      # Upload Build Artifacts #
      ##########################
      - name: 📤📦 Upload Build Artifacts 📦📤
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}-${{ runner.os }}
          path: build
          
  # buildAndroidAppBundle:
 #    if: ${{ github.event_name == 'push' }}
  #   needs: Test
  #   name: 🤖📱 Build for Android App Bundle 📱🤖
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       projectPath:
  #         - ./
  #       unityVersion:
  #         - 2022.3.15f1 
  #       targetPlatform:
  #         - Android
  #   steps:
  #     #####################
  #     # Free Disk Space   #
  #     #####################
  #     - name: 🧹🗑️ Free Disk Space 🗑️🧹
  #       uses: jlumbroso/free-disk-space@v1.3.1

  #     #################
  #     # Checkout Code #
  #     #################
  #     - name: 📥 Checkout Code 📥
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 1 # Fetch full history for accurate cache key
  #         lfs: true

  #     ########################
  #     # Create LFS File List #
  #     ########################
  #     - name: 📝🗂️ Create LFS File List 🗂️📝
  #       run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

  #     #####################
  #     # Restore LFS Cache #
  #     #####################
  #     - name: ♻️📦 Restore LFS Cache ♻️📦
  #       uses: actions/cache@v4
  #       id: lfs-cache
  #       with:
  #         path: .git/lfs
  #         key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

  #     ################
  #     # Git LFS Pull #
  #     ################
  #     - name: 🔄 Git LFS Pull 🔄
  #       run: |
  #         git lfs pull
  #         git add .
  #         git reset --hard

  #     ####################
  #     # Restore Cache    #
  #     ####################
  #     - name: ♻️📦 Restore Library Cache 📦♻️
  #       uses: actions/cache@v4
  #       with:
  #         path: ${{ matrix.projectPath }}/Library
  #         key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
  #         restore-keys: |
  #           Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}-
  #           Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
  #           Library-${{ matrix.projectPath }}-

  #     #####################
  #     # Free Disk Space   #
  #     #####################
  #     - name: 🧹🗑️ Free Disk Space 🗑️🧹
  #       uses: jlumbroso/free-disk-space@v1.3.1
  
  #     ############################
  #     # Build Android App Bundle #
  #     ############################
  #     - name: 🏗️🤖 Build for Android App Bundle 🏗️🤖
  #       uses: game-ci/unity-builder@v4
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         buildName: 'AndroidAppBundle Build - ${{ matrix.unityVersion }}'
  #         projectPath: ${{ matrix.projectPath }}
  #         unityVersion: ${{ matrix.unityVersion }}
  #         targetPlatform: Android
  #         androidExportType: androidAppBundle
  #         androidKeystoreName: user # This file won't exist, but this property needs to exist.
  #         androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  #         androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
  #         androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
  #         androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
  #         androidTargetSdkVersion: AndroidApiLevel35

  #     ##################################
  #     # Upload Android Build Artifacts #
  #     ##################################
  #     - name: 📤📦 Upload Android App Bundle Build Artifacts 📦📤
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: Android-App-Build-${{ matrix.unityVersion }}-${{ runner.os }}
  #         path: build/*.aab
